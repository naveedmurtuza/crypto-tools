<UserControl x:Class="CryptoTools.UI.Controls.OpenKeyStoreControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:CryptoTools.Converters"
             xmlns:viewmodels="clr-namespace:CryptoTools.ViewModels"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="clr-namespace:CryptoTools.UI.Controls" mc:Ignorable="d" d:DesignHeight="176" d:DesignWidth="600" Height="200">
    <Grid>
        <Grid Name="grid1">
            <!--<Grid.DataContext>
            <viewmodels:OpenKeyStoreViewModel x:Name="ViewModel" />
        </Grid.DataContext>-->
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="142*" />
                <ColumnDefinition Width="240*" />
                <ColumnDefinition Width="108*" />
            </Grid.ColumnDefinitions>
            <Label Content="Password:" HorizontalAlignment="Right" Name="label1" VerticalAlignment="Center" Grid.Row="1" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" />
            <Label Content="KeyStore Path:" HorizontalAlignment="Right" Name="label2" VerticalAlignment="Center" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" />
            <Button Content="Browse ..." Grid.Column="2" HorizontalAlignment="Left" Name="button1" VerticalAlignment="Center" Width="75" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" Margin="28,9,0,9" Command="{Binding BrowseFolderCARepo}"/>
            <TextBox Grid.Column="1" Height="23" Name="textBox1" VerticalAlignment="Center" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" Text="{Binding Model.KeyStorePath}" Margin="5,0,0,0" />
            <PasswordBox Grid.Column="1" Grid.Row="1" Height="23" HorizontalAlignment="Stretch" Name="passwordBox1" VerticalAlignment="Center" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" Margin="5,0,0,0" />
            <Separator Grid.Row="2" Height="5" HorizontalAlignment="Stretch" Name="separator1" VerticalAlignment="Center" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,0,5,0" />
            <ComboBox Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Stretch" Name="comboBox1" VerticalAlignment="Center" Margin="10,0" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked}" SelectedValue="{Binding Model.SystemStoreName}" ItemsSource="{Binding X509StoreNames}"/>
            <Button Content="Open" HorizontalAlignment="Left" Name="button2" VerticalAlignment="Center" Width="75" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked, Converter={converters:InverseBooleanConverter}}" Margin="28,9,0,9" Command="{Binding OpenKeyStoreCommand}" CommandParameter="{Binding ElementName=passwordBox1}" />
            <CheckBox Name="chkBxOpenKS" Content="Open System KeyStore" Grid.Row="2" Height="16" HorizontalAlignment="Right"  VerticalAlignment="Center" Margin="0,0,5,0" IsChecked="{Binding Model.IsSystemKeyStore}" />
            <ComboBox Grid.Row="3" Height="23" HorizontalAlignment="Right" Name="comboBox2" VerticalAlignment="Center" Width="133" Margin="0,0,10,0" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked}" SelectedValue="{Binding Model.SystemStoreLocation}" ItemsSource="{Binding X509StoreLocations}"/>
            <Button Content="Open" Grid.Column="2" Grid.Row="3" Height="23" HorizontalAlignment="Center" Name="button3" VerticalAlignment="Center" Width="75" IsEnabled="{Binding ElementName=chkBxOpenKS, Path=IsChecked}" Command="{Binding OpenSystemCommand}"/>

        </Grid>
        <Controls:PopupPanel Controls:PopupParent="{Binding ElementName=grid1}"
                              Controls:PopupPanel.IsPopupVisible="{Binding IsMessageBoxVisible}"
                              Content="{Binding MessageBoxContent}">
            <Controls:PopupPanel.Resources>
                <DataTemplate DataType="{x:Type viewmodels:MessageBoxViewModel}">
                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="2" Background="{StaticResource BackgroundBrush}">
                        <Controls:MessageBoxControl />
                    </Border>
                </DataTemplate>
            </Controls:PopupPanel.Resources>
        </Controls:PopupPanel>
    </Grid>
    
</UserControl>
