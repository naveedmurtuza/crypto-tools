<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Class="CryptoTools.Resources.Win8MenuItem" x:ClassModifier="public">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="Win8StartMenuItem" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{StaticResource BackgroundBrush}" BorderThickness="3">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">

        <Border Name="Border" Background="{StaticResource MenuBackgroundBrush}" Padding="14 0" BorderBrush="{StaticResource MenuBackgroundBrush}" BorderThickness="3">
            <StackPanel>
            <StackPanel Orientation="Vertical">
                <ContentPresenter  Margin="3" ContentSource="Icon" RecognizesAccessKey="True" />
                <ContentPresenter  Margin="3"  ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" HorizontalOffset="-18" VerticalOffset="5" PopupAnimation="Scroll">
                    <Border Name="SubmenuBorder" Margin="0 0 10 0" SnapsToDevicePixels="True" Background="{StaticResource BackgroundBrush}" BorderThickness="2">
                        <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Orientation="Horizontal" Margin="0 0 0 0" />
                        </ScrollViewer>
                    </Border>
                </Popup>
                    <Popup Name="Description" Placement="Bottom" AllowsTransparency="True" Focusable="False"  VerticalOffset="5" PopupAnimation="Scroll">
                        <StackPanel>
                            <Border BorderThickness="2" BorderBrush="White">
                            <TextBlock Text="{TemplateBinding Tag}" />
                            </Border>
                        </StackPanel>
                    </Popup>
                </StackPanel>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSubmenuOpen" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Description" Property="IsOpen" Value="True" />
            </MultiTrigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="Scroll" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuBackgroundActiveBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuBackgroundActiveBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuBackgroundActiveBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="3" />
            </Trigger>
            <!--Snippettoplevelheader-->
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <!--<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />-->
                <!--<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />-->
            </Trigger>
            <!--/Snippettoplevelheader-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->

    <!--<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="Chocolate">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Crimson" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <!-- SubmenuItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        
        <Border Name="Border" Background="{StaticResource SubMenuBackgroundBrush}" Padding="15 0" BorderBrush="{StaticResource SubMenuBackgroundBrush}" BorderThickness="3">
            <StackPanel Orientation="Vertical">
                <ContentPresenter Margin="5" Name="Icon"  ContentSource="Icon" />
                <ContentPresenter Margin="5" Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Bottom" />
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2"
                           DockPanel.Dock="Right" />-->
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>-->
            <!--<Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>-->
            <!--<Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>-->
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuBackgroundActiveBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuBackgroundActiveBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuBackgroundActiveBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="3" />
            </Trigger>
            <!--<Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="DodgerBlue" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="ForestGreen" />
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- MenuItem Style -->

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <!--<Setter Property="Command" Value="{Binding Command}" />-->
        <!--<Setter Property="CommandParameter" Value="{Binding CommandParameter}" />-->
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <!--<Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>-->
            <!--<Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>-->
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>